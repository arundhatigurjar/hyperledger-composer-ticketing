/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.deakin.ticketing.app

// /**
// * Location of the event
//  */
// concept Venue{
//   o String loc
//   o String street
//   o String city
//   o String country
//   o String postcode

// }
enum TicketState{
  o UP_FOR_SALE
  o BOUGHT
  o NOT_AVAILABLE
  o NEW
}
/**************************************************************************
                              PARTICIPANTS
 **************************************************************************/

 //Abstract type user, could be an Admin, EventManager or an Attendee
 abstract participant User identified by id{
  o String id
  o String name
  o String email
}
participant Admin extends User{}

participant EventManager extends User {}

participant Attendee extends User {}

/**************************************************************************
                              ASSETS
 **************************************************************************/
 /**
* The event 
* Note: The double 'E'. Cannot use Event as it coincides with a keyword
 */
asset EEvent identified by id{
  o String id
  o Long numberOfTickets optional
  o String venue
  o DateTime time
  o Double price
  --> Ticket[] tickets
  --> EventManager eventManager
}
 /**
 * Ticket: This is the contract. 
 * - It is identfied by a token
 * - It has the price field
 * - It has a reference of the event that it belongs to
 * - It also has the reference of the buyer and the seller
 */
asset Ticket identified by id {
  o String id
  o String token
  o String message optional
  o Double price
  --> EEvent event
  o TicketState state 
  --> User owner
}

/**************************************************************************
                              TRANSACTIONS
 **************************************************************************/

transaction CreateTickets {
  o Double numberOfTickets
  --> EEvent event
}
transaction SellTicket{
  o Ticket ticket
}
transaction BuyTicket{
  o Ticket ticket
  --> User buyer
}

transaction ValidateTicket{
  o Ticket ticket
  --> User validator
}
